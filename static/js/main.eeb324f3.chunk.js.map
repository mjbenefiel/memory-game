{"version":3,"sources":["components/Wrapper/frenchie.jpg","components/Wrapper/Wrapper.js","components/Navpills/Navpills.js","components/Title/Title.js","components/DogCard/DogCard.js","components/Utag/Utag.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","background","backgroundImage","concat","Background","backgroundSize","overflow","Wrapper","props","react_default","a","createElement","style","className","children","Navpills","href","message","indexOf","color","curScore","topScore","Title","DogCard","onClick","selectDog","breed","alt","src","image","utagExample","type","active","console","log","window","utag","link","tealium_event","product_id","product_name","product_quantity","product_price","App","state","dogs","unselectedDogs","shuffleArray","array","i","length","j","Math","floor","random","_ref","undefined","_this","find","item","setState","newDogs","filter","_this2","this","components_Wrapper_Wrapper","components_Navpills_Navpills","components_Title_Title","Utag","map","dog","components_DogCard_DogCard","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eeb324f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/frenchie.ff5d52ce.jpg\";","import React from \"react\";\nimport \"./Wrapper.css\";\nimport Background from './frenchie.jpg'\n\n const background = {\n      backgroundImage: `url(${Background})`,\n      backgroundSize: 'cover',\n      overflow: 'hidden',\n      \n         \n    };\n\nconst Wrapper = props => <div style={background} className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;","import React from \"react\";\nimport \"./Navpills.css\";\n\nconst Navpills = props => (\n    <div>\n        <ul className=\"nav nav-pills nav-justified\">\n            <li><a href=\"/\">Memory Game</a></li>\n            <li\n                className={props.message.indexOf('incorrectly') !== -1 ? \n                    \"desc-incorrect\" : \n                    props.message.indexOf('correctly') !== -1 ?\n                        \"desc-correct\" :\n                        \"desc-normal\"}\n            >\n                {props.message}\n            </li>\n            <li>Score: <span style={{color: \"#36FF80\"}}>{props.curScore}</span> | Top Score: {props.topScore}</li>\n        </ul>\n    </div>\n);\n\nexport default Navpills;","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props => (\n\n    <div className=\"titlebox\">\n \n        <h1>Frenchie Memory Game</h1>\n        <p>Click on a Frenchie to earn points. Game over if you click on the same Frenchie more than once!</p>\n    \n    </div>\n    \n    \n);\nexport default Title;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport \"./DogCard.css\";\n\nconst DogCard = props => (\n  <div className=\"card\"> \n    <div className=\"img-container\">\n      <a\n        onClick={() => props.selectDog(props.breed)}\n        \n        className={\n          props.curScore === 0\n            ? \"style_prevu_kit style_prevu_kit_ex\"\n            : \"style_prevu_kit\"\n        }\n      >\n        <img alt={props.breed} src={props.image} />\n      </a>\n    </div>\n  </div>\n);\n\n\n\nexport default DogCard;\n","import React from \"react\";\nimport \"./Title.css\";\n\n\n\n\nfunction utagExample() {\n\n\n\n    function sayHello() {\nconsole.log('THIS IS A THING')\nwindow.utag.link({\n  \"tealium_event\"    : \"cart_add\",\n  \"product_id\"       : [\"12345\"],\n  \"product_name\"     : [\"Lucky Shirt\"],\n  \"product_quantity\" : [\"2\"],\n  \"product_price\"    : [\"12.99\"]});\n    }\n    \n    return (\n      <div className=\"titlebox1\"> \n      <button type=\"\" className=\"animated-button\" active onClick={sayHello}>\n        Frenchie Tracking\n      </button>\n      </div>\n    );\n  }\n  \n\n\n  \n  export default utagExample;","import React, { Component } from 'react';\nimport './App.css';\nimport dogs from './dogs.json'\nimport Wrapper from './components/Wrapper'\nimport Navpills from './components/Navpills'\nimport Title from './components/Title'\nimport DogCard from './components/DogCard'\nimport Utag from './components/Utag'\n// import Background from './img/frenchie.jpg'\n\nclass App extends Component {\n    state = {\n        message: \"Click an image to begin!\",\n        topScore: 0,\n        curScore: 0,\n        dogs: dogs,\n        unselectedDogs: dogs\n    }\n\n    componentDidMount() {\n    }\n\n \n\n    shuffleArray = array => {\n        for (let i = array.length - 1; i > 0; i--) {\n            let j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n    }\n\n    selectDog = breed => {\n        const findDog = this.state.unselectedDogs.find(item => item.breed === breed);\n\n        if(findDog === undefined) {\n            // failure to select a new dog\n            this.setState({ \n                message: \"You guessed incorrectly!\",\n                topScore: (this.state.curScore > this.state.topScore) ? this.state.curScore : this.state.topScore,\n                curScore: 0,\n                dogs: dogs,\n                unselectedDogs: dogs\n            });\n        }\n        else {\n            // success to select a new dog\n            const newDogs = this.state.unselectedDogs.filter(item => item.breed !== breed);\n            \n            this.setState({ \n                message: \"You guessed correctly!\",\n                curScore: this.state.curScore + 1,\n                dogs: dogs,\n                unselectedDogs: newDogs\n            });\n        }\n\n        this.shuffleArray(dogs);\n    };\n\n    render() {\n   \n        return (\n            <Wrapper >\n           \n                <Navpills\n                    message={this.state.message}\n                    curScore={this.state.curScore}\n                    topScore={this.state.topScore}\n                />\n                <Title /> <Utag />\n                \n                \n                \n                {\n                    this.state.dogs.map(dog => (\n                        <DogCard\n                            breed={dog.breed}\n                            image={dog.image}\n                            selectDog={this.selectDog} \n                            curScore={this.state.curScore}\n                        />\n                    ))\n                }\n            </Wrapper >\n            \n        );\n    }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}